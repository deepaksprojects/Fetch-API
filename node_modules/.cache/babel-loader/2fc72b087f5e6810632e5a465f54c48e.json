{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\Kalpas task\\\\fetch-data\\\\src\\\\component\\\\newsverticle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Newsverticle = () => {\n  _s();\n\n  const [user, setUser] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage] = useState(6);\n\n  const getUser = async () => {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    setUser(await response.json());\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []); //pagination\n\n  const pageNumber = [];\n\n  for (let i = 1; i <= 3; i++) {\n    pageNumber.push(i);\n  } // get Current post\n\n\n  const indexOfLastPost = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const currentPosts = user.slice(indexOfFirstPost, indexOfLastPost); // changePage\n\n  const paginate = pageNumber => setCurrentPage(pageNumber); // function\n\n\n  const handlePrev = () => {\n    const page = currentPage - 1;\n    setCurrentPage(page);\n  };\n\n  const handleNext = () => {\n    const page = currentPage + 1;\n    setCurrentPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-div\",\n        children: currentPosts.map(curEle => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-c-div\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img-div\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"\\\\images\\\\close.svg\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: curEle.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: curEle.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, curEle.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"nav-m-div\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination nav-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrev,\n              disabled: currentPage === 1,\n              className: \"nav-button\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"\\\\images\\\\arrow_back.svg\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), pageNumber.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"page-item \",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"!#\",\n              onClick: () => paginate(number),\n              className: \"page-link nav-li\",\n              children: number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, number, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNext,\n              disabled: currentPage === 17,\n              className: \"nav-button\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"\\\\images\\\\arrow_forward.svg\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n\n_s(Newsverticle, \"icmdBFrTkjaIpJPexf5qTWPBcBY=\");\n\n_c = Newsverticle;\nexport default Newsverticle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newsverticle\");","map":{"version":3,"sources":["C:/Users/Lenovo/OneDrive/Desktop/Kalpas task/fetch-data/src/component/newsverticle.js"],"names":["React","useEffect","Newsverticle","user","setUser","useState","currentPage","setCurrentPage","postPerPage","getUser","response","fetch","json","pageNumber","i","push","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","handlePrev","page","handleNext","map","curEle","title","body","id","number"],"mappings":"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","sourcesContent":["import React,{useEffect} from 'react'\r\n\r\n\r\nconst Newsverticle = () => {\r\n\r\n    const [user, setUser] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postPerPage] = useState(6);\r\n  \r\n    const getUser = async () => {\r\n      const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n      setUser(await response.json());\r\n    };\r\n  \r\n    useEffect(() => {\r\n      getUser();\r\n    }, []);\r\n  \r\n    //pagination\r\n    const pageNumber = [];\r\n  \r\n    for (let i = 1; i <= 3; i++) {\r\n      pageNumber.push(i);\r\n    }\r\n  \r\n    // get Current post\r\n    const indexOfLastPost = currentPage * postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n    const currentPosts = user.slice(indexOfFirstPost, indexOfLastPost);\r\n  \r\n    // changePage\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  \r\n    // function\r\n    const handlePrev = () => {\r\n      const page = currentPage - 1;\r\n      setCurrentPage(page);\r\n    };\r\n    const handleNext = () => {\r\n      const page = currentPage + 1;\r\n      setCurrentPage(page);\r\n    };\r\n    return (\r\n        <>\r\n             <div>\r\n        <div className=\"news-div\">\r\n          {currentPosts.map((curEle) => {\r\n            return (\r\n              <div className=\"news-c-div\" key={curEle.id}>\r\n                <div className=\"img-div\">\r\n                  <img src=\"\\images\\close.svg\" alt=\"\" />\r\n                </div>\r\n                <h1>{curEle.title}</h1>\r\n                <p>{curEle.body}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <nav className=\"nav-m-div\">\r\n          <ul className=\"pagination nav-div\">\r\n            <li>\r\n              <button\r\n                onClick={handlePrev}\r\n                disabled={currentPage === 1}\r\n                className=\"nav-button\"\r\n              >\r\n                {\" \"}\r\n                <img src=\"\\images\\arrow_back.svg\" alt=\"\" />\r\n              </button>\r\n            </li>\r\n            {pageNumber.map((number) => (\r\n              <li key={number} className=\"page-item \">\r\n                <a\r\n                  href=\"!#\"\r\n                  onClick={() => paginate(number)}\r\n                  className=\"page-link nav-li\"\r\n                >\r\n                  {number}\r\n                </a>\r\n              </li>\r\n            ))}\r\n\r\n            <li>\r\n              {\" \"}\r\n              <button\r\n                onClick={handleNext}\r\n                disabled={currentPage === 17}\r\n                className=\"nav-button\"\r\n              >\r\n                <img src=\"\\images\\arrow_forward.svg\" alt=\"\" />\r\n              </button>{\" \"}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Newsverticle\r\n"]},"metadata":{},"sourceType":"module"}